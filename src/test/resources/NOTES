******Cucumber kurulumu*******
-Cucumber page object model icin olusturdugumuz klasorler:
pages-> page objects
runner-> test caseleri run etmek, raporlari eklemek,feature file ile step definitionskari birlestirmek icin
stepdefinitions->javakodlari
utilities->reusable methods ,driver,configreader
-Cucumber feature klasoru
tum feature file lar bu klasore gider
Tum test caseler gherken dilinde bu klasore yazilir
----------------12.06.2023-----------
1.Feature file olustur : ilkfeaturefile.feature
Feature: ilk feature file

  Scenario: TC_01_google_iphone_arama
  Given kullanici google gider
  When kullanici iphone icin arama yapar
  Then sonuclarda iphone oldugunu dogrular
2.Runner classi run et
3.console dan missing step definitions kopyala
4.stepdefinitions klasorunde GoogleStepDefinitions class i olustur ve oraya yapistir

    @Given("kullanici google gider")
    public void kullanici_google_gider() {

    }
    @When("kullanici iphone icin arama yapar")
    public void kullanici_iphone_icin_arama_yapar() {

}
    @Then("sonuclarda iphone oldugunu dogrular")
    public void sonuclarda_iphone_oldugunu_dogrular() {

    }
5.Step definitionslara gerek java kodlarini yaz
    @Given("kullanici google gider")
    public void kullanici_google_gider() {
        Driver.getDriver().get(ConfigReader.getProperty("google_url"));
NOTE: elementleri kullanmak icin page paketini kullan
  public GooglePage(){
        PageFactory.initElements(Driver.getDriver(),this);
    }
    @FindBy(xpath = "//div[@class='QS5gu sy4vM'])[2]" )
    public WebElement popUpAccept;

    @FindBy(name= "q")
    public WebElement searchBox;

-------------Scenario Outline------------
#Scenario -> Scenario Outline
#"" -> "<sutun_ismi>"
#Example kelimesi Scenario Outline dan sonra kullanilmali
#Example verilerin kullanildigi yerdir
-----------
Scenario Outline Data Driven Testing icin kullanilir
Yani benzer scenarioyu tekrar tekrar farkli datalarda calistirmak icin kullanilir.
Scenario Outline cucumber cok onemlidir.
Ne zaman birden fazla data ile islem yaparsak,scenario outline kullanabiliriz.
Scenario Outline Excel ile otomasyon yapmaya benzer, tek fark, kullanimi daha kolaydir.

}

**********************PARALLEL TEST******************
1. Plugins leri pom.xml e ekle
*surefire -> parallel test icin
*failsafe -> parallel testlerde bir testin fail olmasi dUrumunda diger testler calismaya devam eder.
*cucumber-report -> extra renkli gelismis raporlar verir
2. Coklu runner class olustur
*SmokeTestRunner
*RegressionTestRunner
*TestRunner
note:burda kullanilan taglerden en az biri feature file da olmali aksi takdirde calismaz
3.terminal kullanarak,maven kodu ile testleri calistir
mvn clear verify
mvn clean install
NOTE: Cucumber Reporting Linki :
https://mvnrepository.com/artifact/net.masterthought/cucumber-reporting
https://github.com/damianszczepanik/maven-cucumber-reporting
note : pc terminalden de calisir ama daha karmasiktir,projenin icine girmek lazim
cd ABSOLUTE PATH
cd /Users/kubrakaratash/Desktop/CucumberProject2

********SPARK REPORTS********
1.resources klasorunde extent-config.xml
2.resources klasorunde extent.properties™
3. Spark report dependency pom a ekle: https: //mvnrepository.com/artifact/ tech.grasshopper/extentreports-cucumber7-adapter/ 1.6.0 m
4. Spark report plugin i Runner a ekle™
"com. aventstack. extentreports. cucumber adapter. ExtentCucumberAdapter:"








